# Note: make sure to use the same version of cypress-io/github-action
# in all jobs, otherwise the last version wins I believe
name: Using Cypress GH Action

on: [push, workflow_dispatch]

jobs:
  single-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cypress run
        uses: cypress-io/github-action@v6
        timeout-minutes: 10
        with:
          build: npm run build
          start: npm start

  parallel-runs:
    name: Parallel 4x
    runs-on: ubuntu-22.04
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Cypress Cloud dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 4 copies of the current job in parallel
        # the actual items in the array do not matter
        # we just need to "force" GitHub CI to create 4 jobs
        machines: [1, 2, 3, 4]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # because of "record" and "parallel" parameters
      # these containers will load balance all found tests among themselves
      - name: run tests
        uses: cypress-io/github-action@v6
        timeout-minutes: 5
        with:
          record: false
          parallel: true
          group: GH Action parallel
          start: npm start
        # env:
        #   # pass the Dashboard record key as an environment variable
        #   CYPRESS_RECORD_KEY: ${{ secrets.dashboardRecordKey }}

  parallel-runs-across-platforms:
    name: every OS
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Cypress Cloud dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 2 copies of the current job in parallel
        # and they will load balance all specs
        os: ['ubuntu-22.04', 'windows-latest', 'macos-latest']
        machines: [1, 2]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # because of "record" and "parallel" parameters
      # these containers will load balance all found tests among themselves
      - name: run tests
        uses: cypress-io/github-action@v6
        timeout-minutes: 10
        with:
          record: false
          parallel: true
          group: Parallel 2x on ${{ matrix.os }}
          # on Mac and Linux we can use "npm start"
          start: npm start
          # but for this particular project on Windows we need a different start command
          start-windows: npm run start
        # env:
        #   # pass the Cypress Cloud (dashboard) record key as an environment variable
        #   CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}


 - name: Download a Build Artifact
  uses: actions/download-artifact@v4.1.7
  with:
    # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
    name: # optional
    # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
    path: # optional
    # A glob pattern matching the artifacts that should be downloaded. Ignored if name is specified.
    pattern: # optional
    # When multiple artifacts are matched, this changes the behavior of the destination directories. If true, the downloaded artifacts will be in the same directory specified by path. If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
    merge-multiple: # optional, default is false
    # The GitHub token used to authenticate with the GitHub API. This is required when downloading artifacts from a different repository or from a different workflow run. If this is not specified, the action will attempt to download artifacts from the current repository and the current workflow run.
    github-token: # optional
    # The repository owner and the repository name joined together by "/". If github-token is specified, this is the repository that artifacts will be downloaded from.
    repository: # optional, default is ${{ github.repository }}
    # The id of the workflow run where the desired download artifact was uploaded from. If github-token is specified, this is the run that artifacts will be downloaded from.
    run-id: # optional, default is ${{ github.run_id }}

    name: Documentation

on: []

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      # Additional steps to generate documentation in "Documentation" directory
      - name: Upload Documentation to Wiki
        uses: SwiftDocOrg/github-wiki-publish-action@v1
        with:
          path: "Documentation"
        env:
          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          
